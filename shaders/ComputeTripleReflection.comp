#version 450

const int MATRIX_SIZE = 1024;
const int THREADS_COUNT = min(MATRIX_SIZE, 1024);

layout(std430, binding = 5) buffer layoutName8
{
    vec4 fRow[];
};

layout(std430, binding = 6) buffer layoutName9
{
    vec4 fColumn[];
};

layout(std430, binding = 7) buffer layoutName10
{
    vec4 doubleReflection[];
};

layout(std430, binding = 8) buffer layoutName11
{
    vec4 gRow[];
};

layout(std430, binding = 9) buffer layoutName12
{
    vec4 gColumn[];
};


layout(local_size_x = THREADS_COUNT) in;
void main() {
    uint trIdx = gl_GlobalInvocationID.x;

    vec4 double_reflection = vec4(1);
    for (int i = 0; i < MATRIX_SIZE / THREADS_COUNT; ++i) {
        double_reflection += doubleReflection[i];
    }
    gRow[trIdx] = fRow[trIdx] * double_reflection;
    gColumn[trIdx] = fColumn[trIdx] * double_reflection;
}
